cd LogProcessor
docker build -t logprocessor .



sudo -i -u postgres      # Switch to postgres user
psql                     # Enter PostgreSQL CLI

-- Create Database
CREATE DATABASE logsdb;

-- Switch to logsdb
\c logsdb;

-- Create Table
CREATE TABLE logs (
    id SERIAL PRIMARY KEY,
    remote_addr VARCHAR(255),
    remote_user VARCHAR(255),
    time_local TIMESTAMP,
    request VARCHAR(255),
    status INT,
    body_bytes_sent INT,
    http_referer VARCHAR(255),
    http_user_agent VARCHAR(255),
    http_x_forwarded_for VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS logs (
    id SERIAL PRIMARY KEY,
    remote_addr VARCHAR(255),
    remote_user VARCHAR(255),
    time_local TIMESTAMP,
    request VARCHAR(255),
    status INT,
    body_bytes_sent INT,
    http_referer VARCHAR(255),
    http_user_agent VARCHAR(255),
    http_x_forwarded_for VARCHAR(255)
);


-- Insert Sample Data
INSERT INTO logs (remote_addr, remote_user, time_local, request, status, body_bytes_sent, http_referer, http_user_agent, http_x_forwarded_for)
VALUES
('192.168.1.1', '-', '2025-03-11 12:34:56', 'GET /home HTTP/1.1', 200, 1024, 'https://www.google.com', 'Mozilla/5.0', '10.0.0.1');

-- Verify Data Insertion
SELECT * FROM logs;

API's::::::::::

GET ->  http://localhost:8082/getlogsCount
GET ->  http://localhost:8082/getlogs


http://localhost:8083/getlogs?
remote_addr={remote_addr_value}&
status={status_value}&
body_bytes_sent={body_bytes_sent_value}&
start_time={start_time_value}&
end_time={end_time_value}&
http_referer={http_referer_value}&
http_user_agent={http_user_agent_value}&
http_x_forwarded_for={http_x_forwarded_for_value}




